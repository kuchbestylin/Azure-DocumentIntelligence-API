@page "/filesystem"
@using SharedProject.Services
@inject ContextMenuService ContextMenuService
@inject IJSRuntime JSRuntime
@inject NotificationService NotificationService
@inject DialogService DialogService

<style>
    .folder-drag-over {
        border: 2px dashed #007bff;
        cursor: pointer !important;
    }
    .file-system-tabs div{
        background-color: rgba(255,255,255,0.9);
        padding: 0.6em 3em;
        font-weight: bold;
        box-shadow: 0 1px 10px 5px rgba(240,240,240,1);
        border-radius: 1px;
    }
    .addnew-button {
        border: 1px solid silver;
        border-radius: 5px;
        padding: 0.3em 1em;
        cursor: pointer;
    }

    .addnew-button:hover{
        background-color: rgba(0,0,0,0.07);
        border: 1px solid rgba(228,157,57,1);
        margin: -1px 0px 0 0;
    }

    .selected-toplevel-container{
        color: rgba(228,157,57,1);
        box-shadow: 0px 1px 1px 0px rgba(228,157,57,1) !important;
    }

    .block {
        position: relative;
        width: 170px;
        height: 35px;
        background: white;
    }

    .block:before, .block:after {
        content: '';
        position: absolute;
        left: -2px;
        top: -2px;
        background: linear-gradient(45deg, #fb0094, #0000ff, #00ff00,#ffff00, #ff0000, #fb0094, #0000ff, #00ff00,#ffff00, #ff0000);
        background-size: 400%;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        z-index: -1;
        animation: steam 20s linear infinite;
    }

    @@keyframes steam {
        0% {
            background-position: 0 0;
        }

        50% {
            background-position: 400% 0;
        }

        100% {
            background-position: 0 0;
        }
    }

    .block:after {
        filter: blur(50px);
    }
</style>
<div>
    <div class="d-flex align-items-center justify-content-between bg-white p-2 border-silver">
        <div id="dropZone" @ondragover:preventDefault=true class="block selected-toplevel-container"></div>

    </div>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        int statusCode = await JSRuntime.InvokeAsync<int>("handleDropInit", "dropZone", "fileInfo", "1");
        Console.WriteLine(statusCode);
    }
    protected async Task SetOnDragListeners()
    {
        await JSRuntime.InvokeAsync<int>("handleDropInit", "", "");
    }
    public Task SearchValueChanged(string value)
    {
        return Task.CompletedTask;
    }
    [Inject]
    public IFileSystemService FileSystemService { get; set; }
    int selectedClass = 0;
    string fileName = string.Empty;
}
